<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc.xsd
                            http://code.alibabatech.com/schema/dubbo
                            http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security.xsd">

    <!--1.配置匿名访问-->
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/login.html" security="none"/>


    <!--2.配置需要权限才能访问的资源-->
    <security:http auto-config="true" use-expressions="true">
        <!--配置拦截的路径-->
<!--        <security:intercept-url pattern="/**" access="ROLE_ADMIN"/>-->


        <!--只要认证通过就可以访问-->
        <security:intercept-url pattern="/success.html"  access="isAuthenticated()" />

        <security:intercept-url pattern="/a.html"  access="isAuthenticated()" />

        <!--拥有add权限就可以访问b.html页面-->
        <security:intercept-url pattern="/b.html"  access="hasAuthority('add')" />

        <!--拥有ROLE_ADMIN角色就可以访问c.html页面-->
        <security:intercept-url pattern="/c.html"  access="hasRole('ROLE_ADMIN')" />

        <!--拥有ROLE_ADMIN角色就可以访问d.html页面，
            注意：此处虽然写的是ADMIN角色，框架会自动加上前缀ROLE_-->
        <security:intercept-url pattern="/d.html"  access="hasRole('ADMIN')" />







        <!--配置自定义登录页面-->
        <security:form-login login-page="/login.html" always-use-default-target="true"
                             default-target-url="/success.html"
                             authentication-failure-url="/login.html" login-processing-url="/login.do"/>

        <!--配置登出-->
        <security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/login.html"/>
        <!--关闭csrf跨站攻击-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--3.配置认证管理器-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <security:password-encoder ref="bCryptPasswordEncoder"/>
            <!--  <security:user-service>
                  <security:user name="admin" authorities="ROLE_ADMIN" password="{noop}admin"/>
              </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <context:component-scan base-package="com.ismyself"/>
    <mvc:annotation-driven/>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>

</beans>