<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ismyself.dao.MenuDao">

    <!--findByQueryString-->
    <select id="findByQueryString" parameterType="String" resultType="Menu">
        select * from t_menu where 1=1
        <if test="value != null and value.length > 0">
            and name like '%${value}%' or linkUrl like '%${value}%'
        </if>
    </select>

    <!--save-->
    <insert id="save" parameterType="Menu">
        insert into t_menu (name, linkUrl, path, priority, icon, description, parentMenuId, level) VALUES (#{name},#{linkUrl},#{path},#{priority},#{icon},#{description},#{parentMenuId},#{level})
    </insert>

    <!--findRoleAndMenuCountById-->
    <select id="findRoleAndMenuCountById" parameterType="int" resultType="int">
        select count(id) from t_role_menu where menu_id = #{id}
    </select>

    <!--deleteById-->
    <delete id="deleteById" parameterType="int">
        delete from t_menu where id = #{id}
    </delete>

    <!--findById-->
    <select id="findById" parameterType="int" resultType="Menu">
        select * from t_menu where id = #{id}
    </select>

    <!--update-->
    <update id="update" parameterType="Menu">
        update t_menu
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="linkUrl != null">
                linkUrl = #{linkUrl},
            </if>
            <if test="path != null">
                path = #{path},
            </if>
            <if test="priority != null">
                priority = #{priority},
            </if>
            <if test="icon != null">
                icon = #{icon},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="parentMenuId != null">
                parentMenuId = #{parentMenuId},
            </if>
            <if test="level != null">
                level = #{level}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--findAllList-->
    <select id="findAllList" resultType="Menu">
        select * from t_menu
    </select>

    <!--findMenusByRid-->
    <select id="findMenusByRid" resultType="Menu" parameterType="int">
        select * from t_menu where id in (select menu_id from t_role_menu where role_id = #{id})
    </select>

    <!--findIdsByRoleId-->
    <select id="findIdsByRoleId" parameterType="int" resultType="int">
         select menu_id from t_role_menu where role_id = #{id}
    </select>

    <!--findMenuByUsername-->
    <select id="findMenuByUsername" parameterType="String" resultType="Menu">
         SELECT *
        FROM t_menu
        WHERE level = 1
            AND id IN (
                SELECT menu_id
                FROM t_role_menu
                WHERE role_id = (
                    SELECT role_id
                    FROM t_user_role
                    WHERE user_id = (
                        SELECT id
                        FROM t_user
                        WHERE username = #{value}
                    )
                )
            )
        ORDER BY priority ASC
    </select>

    <!--findListByParentId-->
    <select id="findListByParentId" parameterType="int" resultType="Menu">
        select * from t_menu where parentMenuId = #{id} order by priority asc
    </select>
</mapper>